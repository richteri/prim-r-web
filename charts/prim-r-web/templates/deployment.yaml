apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
        env:
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                key: postgresHost
                name: managed-services
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                key: postgresPort
                name: managed-services
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: postgresDb
                name: managed-services
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: redisHost
                name: managed-services
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: redisPort
                name: managed-services
          - name: JOB_QUEUE_KEY
            valueFrom:
              configMapKeyRef:
                key: jobQueueKey
                name: managed-services
          - name: PROCESSING_QUEUE_KEY
            valueFrom:
              configMapKeyRef:
                key: processingQueueKey
                name: managed-services
          - name: CACHE_NAME
            valueFrom:
              configMapKeyRef:
                key: cacheName
                name: managed-services
          - name: SPRING_PROFILES_ACTIVE
            valueFrom:
              configMapKeyRef:
                key: springProfilesActive
                name: managed-services
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: user
                name: postgres-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgres-secret
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
